!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
MULTIBOOT_AOUT_KLUDGE	start.asm	/^    MULTIBOOT_AOUT_KLUDGE	equ 1<<16$/;"	d
MULTIBOOT_CHECKSUM	start.asm	/^    MULTIBOOT_CHECKSUM	equ -(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS)$/;"	d
MULTIBOOT_HEADER_FLAGS	start.asm	/^    MULTIBOOT_HEADER_FLAGS	equ MULTIBOOT_PAGE_ALIGN | MULTIBOOT_MEMORY_INFO | MULTIBOOT_AOUT_KLUDGE$/;"	d
MULTIBOOT_HEADER_MAGIC	start.asm	/^    MULTIBOOT_HEADER_MAGIC	equ 0x1BADB002$/;"	d
MULTIBOOT_MEMORY_INFO	start.asm	/^    MULTIBOOT_MEMORY_INFO	equ 1<<1$/;"	d
MULTIBOOT_PAGE_ALIGN	start.asm	/^    MULTIBOOT_PAGE_ALIGN	equ 1<<0$/;"	d
SECTION	start.asm	/^SECTION .bss$/;"	l
__SYSTEM_H	include/system.h	7;"	d
_gdt_flush	start.asm	/^_gdt_flush:$/;"	l
_idt_load	start.asm	/^_idt_load:$/;"	l
_irq0	start.asm	/^_irq0:$/;"	l
_irq1	start.asm	/^_irq1:$/;"	l
_irq10	start.asm	/^_irq10:$/;"	l
_irq11	start.asm	/^_irq11:$/;"	l
_irq12	start.asm	/^_irq12:$/;"	l
_irq13	start.asm	/^_irq13:$/;"	l
_irq14	start.asm	/^_irq14:$/;"	l
_irq15	start.asm	/^_irq15:$/;"	l
_irq2	start.asm	/^_irq2:$/;"	l
_irq3	start.asm	/^_irq3:$/;"	l
_irq4	start.asm	/^_irq4:$/;"	l
_irq5	start.asm	/^_irq5:$/;"	l
_irq6	start.asm	/^_irq6:$/;"	l
_irq7	start.asm	/^_irq7:$/;"	l
_irq8	start.asm	/^_irq8:$/;"	l
_irq9	start.asm	/^_irq9:$/;"	l
_isr0	start.asm	/^_isr0:$/;"	l
_isr1	start.asm	/^_isr1:$/;"	l
_isr10	start.asm	/^_isr10:$/;"	l
_isr11	start.asm	/^_isr11:$/;"	l
_isr12	start.asm	/^_isr12:$/;"	l
_isr13	start.asm	/^_isr13:$/;"	l
_isr14	start.asm	/^_isr14:$/;"	l
_isr15	start.asm	/^_isr15:$/;"	l
_isr16	start.asm	/^_isr16:$/;"	l
_isr17	start.asm	/^_isr17:$/;"	l
_isr18	start.asm	/^_isr18:$/;"	l
_isr19	start.asm	/^_isr19:$/;"	l
_isr2	start.asm	/^_isr2:$/;"	l
_isr20	start.asm	/^_isr20:$/;"	l
_isr21	start.asm	/^_isr21:$/;"	l
_isr22	start.asm	/^_isr22:$/;"	l
_isr23	start.asm	/^_isr23:$/;"	l
_isr24	start.asm	/^_isr24:$/;"	l
_isr25	start.asm	/^_isr25:$/;"	l
_isr26	start.asm	/^_isr26:$/;"	l
_isr27	start.asm	/^_isr27:$/;"	l
_isr28	start.asm	/^_isr28:$/;"	l
_isr29	start.asm	/^_isr29:$/;"	l
_isr3	start.asm	/^_isr3:$/;"	l
_isr30	start.asm	/^_isr30:$/;"	l
_isr31	start.asm	/^_isr31:$/;"	l
_isr4	start.asm	/^_isr4:$/;"	l
_isr5	start.asm	/^_isr5:$/;"	l
_isr6	start.asm	/^_isr6:$/;"	l
_isr7	start.asm	/^_isr7:$/;"	l
_isr8	start.asm	/^_isr8:$/;"	l
_isr9	start.asm	/^_isr9:$/;"	l
_sys_stack	start.asm	/^_sys_stack:$/;"	l
access	gdt.c	/^    unsigned char access;$/;"	m	struct:gdt_entry	file:
always0	idt.c	/^    unsigned char always0;$/;"	m	struct:idt_entry	file:
attrib	scrn.c	/^int attrib = 0x0F;$/;"	v
base	gdt.c	/^    unsigned int base;$/;"	m	struct:gdt_ptr	file:
base	idt.c	/^    unsigned int base;$/;"	m	struct:idt_ptr	file:
base_hi	idt.c	/^    unsigned short base_hi;$/;"	m	struct:idt_entry	file:
base_high	gdt.c	/^    unsigned char base_high;$/;"	m	struct:gdt_entry	file:
base_lo	idt.c	/^    unsigned short base_lo;$/;"	m	struct:idt_entry	file:
base_low	gdt.c	/^    unsigned short base_low;$/;"	m	struct:gdt_entry	file:
base_middle	gdt.c	/^    unsigned char base_middle;$/;"	m	struct:gdt_entry	file:
cls	scrn.c	/^void cls()$/;"	f
cs	include/system.h	/^    unsigned int eip, cs, eflags, useresp, ss;    $/;"	m	struct:regs
csr_x	scrn.c	/^int csr_x = 0, csr_y = 0;$/;"	v
csr_y	scrn.c	/^int csr_x = 0, csr_y = 0;$/;"	v
ds	include/system.h	/^    unsigned int gs, fs, es, ds;$/;"	m	struct:regs
eax	include/system.h	/^    unsigned int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:regs
ebp	include/system.h	/^    unsigned int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:regs
ebx	include/system.h	/^    unsigned int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:regs
ecx	include/system.h	/^    unsigned int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:regs
edi	include/system.h	/^    unsigned int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:regs
edx	include/system.h	/^    unsigned int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:regs
eflags	include/system.h	/^    unsigned int eip, cs, eflags, useresp, ss;    $/;"	m	struct:regs
eip	include/system.h	/^    unsigned int eip, cs, eflags, useresp, ss;    $/;"	m	struct:regs
err_code	include/system.h	/^    unsigned int int_no, err_code;$/;"	m	struct:regs
es	include/system.h	/^    unsigned int gs, fs, es, ds;$/;"	m	struct:regs
esi	include/system.h	/^    unsigned int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:regs
esp	include/system.h	/^    unsigned int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:regs
exception_messages	isrs.c	/^unsigned char *exception_messages[] =$/;"	v
extern	start.asm	/^extern _fault_handler$/;"	l
extern	start.asm	/^extern _gp$/;"	l
extern	start.asm	/^extern _idtp$/;"	l
extern	start.asm	/^extern _irq_handler$/;"	l
fault_handler	isrs.c	/^void fault_handler(struct regs *r)$/;"	f
flags	idt.c	/^    unsigned char flags;$/;"	m	struct:idt_entry	file:
flush2	start.asm	/^flush2:$/;"	l
fs	include/system.h	/^    unsigned int gs, fs, es, ds;$/;"	m	struct:regs
gdt	gdt.c	/^struct gdt_entry gdt[3];$/;"	v	typeref:struct:gdt_entry
gdt_entry	gdt.c	/^struct gdt_entry$/;"	s	file:
gdt_install	gdt.c	/^void gdt_install()$/;"	f
gdt_ptr	gdt.c	/^struct gdt_ptr$/;"	s	file:
gdt_set_gate	gdt.c	/^void gdt_set_gate(int num, unsigned long base, unsigned long limit, unsigned char access, unsigned char gran)$/;"	f
global	start.asm	/^global _gdt_flush$/;"	l
global	start.asm	/^global _idt_load$/;"	l
global	start.asm	/^global _irq0$/;"	l
global	start.asm	/^global _irq1$/;"	l
global	start.asm	/^global _irq10$/;"	l
global	start.asm	/^global _irq11$/;"	l
global	start.asm	/^global _irq12$/;"	l
global	start.asm	/^global _irq13$/;"	l
global	start.asm	/^global _irq14$/;"	l
global	start.asm	/^global _irq15$/;"	l
global	start.asm	/^global _irq2$/;"	l
global	start.asm	/^global _irq3$/;"	l
global	start.asm	/^global _irq4$/;"	l
global	start.asm	/^global _irq5$/;"	l
global	start.asm	/^global _irq6$/;"	l
global	start.asm	/^global _irq7$/;"	l
global	start.asm	/^global _irq8$/;"	l
global	start.asm	/^global _irq9$/;"	l
global	start.asm	/^global _isr0$/;"	l
global	start.asm	/^global _isr1$/;"	l
global	start.asm	/^global _isr10$/;"	l
global	start.asm	/^global _isr11$/;"	l
global	start.asm	/^global _isr12$/;"	l
global	start.asm	/^global _isr13$/;"	l
global	start.asm	/^global _isr14$/;"	l
global	start.asm	/^global _isr15$/;"	l
global	start.asm	/^global _isr16$/;"	l
global	start.asm	/^global _isr17$/;"	l
global	start.asm	/^global _isr18$/;"	l
global	start.asm	/^global _isr19$/;"	l
global	start.asm	/^global _isr2$/;"	l
global	start.asm	/^global _isr20$/;"	l
global	start.asm	/^global _isr21$/;"	l
global	start.asm	/^global _isr22$/;"	l
global	start.asm	/^global _isr23$/;"	l
global	start.asm	/^global _isr24$/;"	l
global	start.asm	/^global _isr25$/;"	l
global	start.asm	/^global _isr26$/;"	l
global	start.asm	/^global _isr27$/;"	l
global	start.asm	/^global _isr28$/;"	l
global	start.asm	/^global _isr29$/;"	l
global	start.asm	/^global _isr3$/;"	l
global	start.asm	/^global _isr30$/;"	l
global	start.asm	/^global _isr31$/;"	l
global	start.asm	/^global _isr4$/;"	l
global	start.asm	/^global _isr5$/;"	l
global	start.asm	/^global _isr6$/;"	l
global	start.asm	/^global _isr7$/;"	l
global	start.asm	/^global _isr8$/;"	l
global	start.asm	/^global _isr9$/;"	l
global	start.asm	/^global start$/;"	l
gp	gdt.c	/^struct gdt_ptr gp;$/;"	v	typeref:struct:gdt_ptr
granularity	gdt.c	/^    unsigned char granularity;$/;"	m	struct:gdt_entry	file:
gs	include/system.h	/^    unsigned int gs, fs, es, ds;$/;"	m	struct:regs
idt	idt.c	/^struct idt_entry idt[256];$/;"	v	typeref:struct:idt_entry
idt_entry	idt.c	/^struct idt_entry$/;"	s	file:
idt_install	idt.c	/^void idt_install()$/;"	f
idt_ptr	idt.c	/^struct idt_ptr$/;"	s	file:
idt_set_gate	idt.c	/^void idt_set_gate(unsigned char num, unsigned long base, unsigned short sel, unsigned char flags)$/;"	f
idtp	idt.c	/^struct idt_ptr idtp;$/;"	v	typeref:struct:idt_ptr
init_video	scrn.c	/^void init_video(void)$/;"	f
inportb	main.c	/^unsigned char inportb (unsigned short _port)$/;"	f
int_no	include/system.h	/^    unsigned int int_no, err_code;$/;"	m	struct:regs
irq_common_stub	start.asm	/^irq_common_stub:$/;"	l
irq_handler	irq.c	/^void irq_handler(struct regs *r)$/;"	f
irq_install	irq.c	/^void irq_install()$/;"	f
irq_install_handler	irq.c	/^void irq_install_handler(int irq, void (*handler)(struct regs *r))$/;"	f
irq_remap	irq.c	/^void irq_remap(void)$/;"	f
irq_routines	irq.c	/^void *irq_routines[16] =$/;"	v
irq_uninstall_handler	irq.c	/^void irq_uninstall_handler(int irq)$/;"	f
isr_common_stub	start.asm	/^isr_common_stub:$/;"	l
isrs_install	isrs.c	/^void isrs_install()$/;"	f
kbdus	kb.c	/^unsigned char kbdus[128] =$/;"	v
keyboard_handler	kb.c	/^void keyboard_handler(struct regs *r)$/;"	f
keyboard_install	kb.c	/^void keyboard_install()$/;"	f
limit	gdt.c	/^    unsigned short limit;$/;"	m	struct:gdt_ptr	file:
limit	idt.c	/^    unsigned short limit;$/;"	m	struct:idt_ptr	file:
limit_low	gdt.c	/^    unsigned short limit_low;$/;"	m	struct:gdt_entry	file:
main	main.c	/^void main()$/;"	f
mboot	start.asm	/^mboot:$/;"	l
memcpy	main.c	/^void *memcpy(void *dest, const void *src, size_t count)$/;"	f
memset	main.c	/^void *memset(void *dest, char val, size_t count)$/;"	f
memsetw	main.c	/^unsigned short *memsetw(unsigned short *dest, unsigned short val, size_t count)$/;"	f
move_csr	scrn.c	/^void move_csr(void)$/;"	f
outportb	main.c	/^void outportb (unsigned short _port, unsigned char _data)$/;"	f
pop	start.asm	/^    pop ds$/;"	d
push	start.asm	/^    push ds$/;"	d
putch	scrn.c	/^void putch(unsigned char c)$/;"	f
puts	scrn.c	/^void puts(unsigned char *text)$/;"	f
regs	include/system.h	/^struct regs$/;"	s
scroll	scrn.c	/^void scroll(void)$/;"	f
sel	idt.c	/^    unsigned short sel;$/;"	m	struct:idt_entry	file:
settextcolor	scrn.c	/^void settextcolor(unsigned char forecolor, unsigned char backcolor)$/;"	f
size_t	include/system.h	/^typedef int size_t;$/;"	t
ss	include/system.h	/^    unsigned int eip, cs, eflags, useresp, ss;    $/;"	m	struct:regs
start	start.asm	/^start:$/;"	l
strlen	main.c	/^size_t strlen(const char *str)$/;"	f
stublet	start.asm	/^stublet:$/;"	l
textmemptr	scrn.c	/^unsigned short *textmemptr;$/;"	v
timer_handler	timer.c	/^void timer_handler(struct regs *r)$/;"	f
timer_install	timer.c	/^void timer_install()$/;"	f
timer_ticks	timer.c	/^int timer_ticks = 0;$/;"	v
timer_wait	timer.c	/^void timer_wait(int ticks)$/;"	f
useresp	include/system.h	/^    unsigned int eip, cs, eflags, useresp, ss;    $/;"	m	struct:regs
